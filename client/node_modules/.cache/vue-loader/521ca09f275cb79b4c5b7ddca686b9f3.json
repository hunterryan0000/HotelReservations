{"remainingRequest":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\workspace\\HotelReservations\\client\\src\\views\\ReservationDeleteView.vue?vue&type=style&index=0&id=0f6f2734&prod&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\src\\views\\ReservationDeleteView.vue","mtime":1680361231558},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1680355300544},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1680355304846},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1680355301937},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680355299326},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1680355303949}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNkZWxldGUtYnV0dG9uOmhvdmVyIHsKICBjb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["ReservationDeleteView.vue"],"names":[],"mappings":";AA+FA;AACA;AACA","file":"ReservationDeleteView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <div id=\"heading-line\">\n      <h1>\n        Delete Reservation\n        <loading-spinner id=\"spinner\" v-bind:spin=\"isLoading\" />\n      </h1>\n    </div>\n    <reservation-details v-bind:reservation=\"reservation\" />\n    <hr />\n    Are you sure you want to delete this reservation?<br /><br />\n    <button id=\"delete-button\" v-on:click=\"deleteReservation\">\n      <font-awesome-icon icon=\"fa-solid fa-trash-can\" /> Delete</button\n    >&nbsp;\n    <button v-on:click=\"listReservations\">Cancel</button>\n  </div>\n</template>\n\n<script>\nimport LoadingSpinner from \"../components/LoadingSpinner.vue\";\nimport ReservationDetails from \"../components/ReservationDetails.vue\";\n//step 5.2\nimport hotelService from \"../services/HotelService\";\nexport default {\n  name: \"ReservationDeleteView\",\n  components: {\n    LoadingSpinner,\n    ReservationDetails,\n  },\n  data() {\n    return {\n      isLoading: false, // true to indicate a call in progress\n      reservation: {}, // the reservation to be deleted by this view\n    };\n  },\n\n  methods: {\n    getReservation(id) {\n      console.log(id); // prevents a \"no-unused-vars\" error\n      // Set the indicator that a call is in progress.\n      this.isLoading = true;\n\n      // TODO 5.3: Use the Service object to `GET /reservations/{id}`. Set the body of the result to `this.reservation`. Handle errors.\n      hotelService\n        .getReservationById(id)\n        .then((response) => {\n          this.reservation = response.data;\n      // When done (whether success or error) set the indicator that the call is complete.\n      this.isLoading = false;\n      })\n      .catch(error => {\n        if (error.response.status == 404) {\n          this.isLoading = false;\n          alert(error);\n        }\n      });\n    },\n    deleteReservation() {\n      // Set the indicator that a call is in progress.\n      this.isLoading = true;\n\n      // TODO 5.4: Use the Service object to `DELETE /reservations/{id}`. When done, call listReservations() to navigate to Hotel Details. Handle errors.\n      hotelService\n        .deleteReservation(this.reservation.id)\n        .then(() => {\n      // When done (whether success or error) set the indicator that the call is complete.\n      this.isLoading = false;\n      this.listReservations();\n      })\n      .catch(error => {\n        if (error.response.status == 404) {\n          this.isLoading = false;\n          alert(error);\n        }\n      });\n    },\n\n    listReservations() {\n      // Navigate to the Hotel Details page, with a parameter that says to display reservations too.\n      this.$router.push({\n        name: \"hotel\",\n        params: { id: this.reservation.hotelId },\n        query: { showRes: true },\n      });\n    },\n  },\n\n  // TODO 5.5: Create a Vue Lifecycle hook function which calls `this.getReservation()`, passing in the `id` path parameter.\ncreated() {\n    this.getReservation(this.$route.params.id);\n  },\n};\n</script>\n\n<style scoped>\n#delete-button:hover {\n  color: red;\n}\n</style>"]}]}