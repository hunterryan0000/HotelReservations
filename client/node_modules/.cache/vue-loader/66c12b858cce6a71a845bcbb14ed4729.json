{"remainingRequest":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\workspace\\HotelReservations\\client\\src\\views\\ReservationUpdateView.vue?vue&type=style&index=0&id=ca212da0&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\src\\views\\ReservationUpdateView.vue","mtime":1688831267952},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1680355300544},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1680355304846},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1680355301937},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680355299326},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1680355303949}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmZpZWxkc2V0IHsKICBib3JkZXI6IG5vbmU7Cn0KZmllbGRzZXQgPiBsYWJlbCB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHdpZHRoOiAxODBweDsKfQo="},{"version":3,"sources":["ReservationUpdateView.vue"],"names":[],"mappings":";AAsIA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReservationUpdateView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <div id=\"heading-line\">\n      <h1>\n        Update Reservation\n        <loading-spinner id=\"spinner\" v-bind:spin=\"isLoading\" />\n      </h1>\n    </div>\n    <reservation-details v-bind:reservation=\"reservation\" />\n    <hr />\n    <form v-on:submit.prevent=\"updateReservation\">\n      <fieldset>\n        <label for=\"fullName\">Full name: </label>\n        <input\n          type=\"text\"\n          name=\"fullName\"\n          id=\"fullName\"\n          v-model=\"reservation.fullName\"\n        />\n      </fieldset>\n      <fieldset>\n        <label for=\"checkinDate\">Checkin date: </label>\n        <input\n          type=\"date\"\n          name=\"checkinDate\"\n          id=\"checkinDate\"\n          v-model=\"reservation.checkinDate\"\n        />\n      </fieldset>\n      <fieldset>\n        <label for=\"checkoutDate\">Checkout date: </label>\n        <input\n          type=\"date\"\n          name=\"checkoutDate\"\n          id=\"checkoutDate\"\n          v-model=\"reservation.checkoutDate\"\n        />\n      </fieldset>\n      <fieldset>\n        <label for=\"guests\">Number of guests: </label>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"5\"\n          name=\"guests\"\n          id=\"guests\"\n          v-model=\"reservation.guests\"\n        />\n      </fieldset>\n    </form>\n    <button v-on:click=\"updateReservation\">Update</button>&nbsp;\n    <button v-on:click=\"listReservations\">Cancel</button>\n  </div>\n</template>\n\n<script>\nimport LoadingSpinner from \"../components/LoadingSpinner.vue\";\nimport ReservationDetails from \"../components/ReservationDetails.vue\";\n//step 4.2\nimport hotelService from \"../services/HotelService\";\nexport default {\n  name: \"ReservationUpdateView\",\n  components: {\n    LoadingSpinner,\n    ReservationDetails,\n  },\n  data() {\n    return {\n      isLoading: false, // true to indicate a call in progress\n      reservation: {}, // the reservation to be updated by this view\n    };\n  },\n\n  methods: {\n    getReservation(id) {\n      console.log(id);  // prevents a \"no-unused-vars\" error\n      // Set the indicator that a call is in progress.\n      this.isLoading = true;\n\n      // TODO 4.3: Use the Service object to `GET /reservations/{id}`. Set the body of the result to `this.reservation`. Handle errors.\n      hotelService\n        .getReservationById(id)\n        .then((response) => {\n      // When done (whether success or error) set the indicator that the call is complete.\n      this.isLoading = false;\n      this.reservation = response.data;\n      })\n      .catch(error => {\n        if (error.response.status == 404) {\n          this.isLoading = false;\n          alert(error);\n        }\n      });\n    },\n    updateReservation() {\n      // Set the indicator that a call is in progress.\n      this.isLoading = true;\n\n      // TODO step 4.4: Use the Service object to `PUT /reservations/{id}`. When done, call listReservations() to navigate to Hotel Details. Handle errors.\n      hotelService\n        .updateReservation(this.reservation)\n        .then(() => {\n      // When done (whether success or error) set the indicator that the call is complete.\n      this.isLoading = false;\n      this.listReservations();\n\n      })\n      .catch(error => {\n        if (error.response.status == 404) {\n          this.isLoading = false;\n          alert(error);\n        }\n      });\n    },\n\n    listReservations() {\n      // Navigate to the Hotel Details page, with a parameter that says to display reservations too.\n      this.$router.push({\n        name: \"hotel\",\n        params: { id: this.reservation.hotelId },\n        query: { showRes: true },\n      });\n    },\n  },\n\n  // TODO step 4.5: Create a Vue Lifecycle hook function which calls `this.getReservation()`, passing in the `id` path parameter.\n  created() {\n    this.getReservation(this.$route.params.id);\n  },\n\n};\n</script>\n\n<style scoped>\nfieldset {\n  border: none;\n}\nfieldset > label {\n  display: inline-block;\n  width: 180px;\n}\n</style>"]}]}