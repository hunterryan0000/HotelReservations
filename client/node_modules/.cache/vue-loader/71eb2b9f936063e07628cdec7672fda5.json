{"remainingRequest":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\workspace\\HotelReservations\\client\\src\\views\\HotelDetailsView.vue?vue&type=style&index=0&id=ab23ea66&prod&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\src\\views\\HotelDetailsView.vue","mtime":1680358847132},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1680355300544},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1680355304846},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1680355301937},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680355299326},{"path":"C:\\Users\\Student\\workspace\\HotelReservations\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1680355303949}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNyZXNlcnZhdGlvbi1kZXRhaWxzIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCiNoZWFkaW5nLWxpbmUgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKI2hvdGVsLWRldGFpbHMgewogIGRpc3BsYXk6IGdyaWQ7CiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyMDBweCBhdXRvOwogIHBhZGRpbmc6IDEwcHggMzBweDsKICByb3ctZ2FwOiAyMHB4Owp9CgojaG90ZWwtcmVzZXJ2YXRpb25zIHsKICBwYWRkaW5nOiAxMHB4IDMwcHg7Cn0KCiNob3RlbC1kZXRhaWxzID4gKiB7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYigxNzUsIDE3NSwgMTc1KTsKICBwYWRkaW5nLXRvcDogMTVweDsKfQoKI2hvdGVsLWltYWdlIHsKICBtYXgtaGVpZ2h0OiAxMDBweDsKfQoKc2VjdGlvbiA+IGhlYWRlciB7CiAgZm9udC1zaXplOiAxLjFyZW07CiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsKfQoKaW1nLnJhdGluZy1zdGFyIHsKICBoZWlnaHQ6IDUwcHg7Cn0KCi5mYS1pY29uIHsKICBmb250LXNpemU6IDEuNHJlbTsKICBtYXJnaW4tcmlnaHQ6IDhweDsKfQo="},{"version":3,"sources":["HotelDetailsView.vue"],"names":[],"mappings":";AAiLA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"HotelDetailsView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div id=\"heading-line\">\n      <img\n        id=\"hotel-image\"\n        v-bind:src=\"'/images/' + hotel.coverImage\"\n        alt=\"Hotel photo\"\n      />\n      <h1>\n        {{ hotel.name }}\n        <loading-spinner id=\"spinner\" v-bind:spin=\"isLoading\" />\n      </h1>\n    </div>\n    <section id=\"hotel-details\">\n      <header>Address</header>\n      <article>\n        {{ hotel.address.address }}<br />\n        {{ hotel.address.address2 }}<br v-if=\"hotel.address.address2\" />\n        {{ hotel.address.city }}<br />\n        {{ hotel.address.state }}<br />\n        {{ hotel.address.zip }}\n      </article>\n      <header>Cost</header>\n      <article>{{ formatCurrency(hotel.costPerNight) }} per night</article>\n      <header>Capacity</header>\n      <article>{{ hotel.roomsAvailable }} rooms</article>\n      <header>Rating</header>\n      <article>\n        <img\n          class=\"rating-star\"\n          v-for=\"n in hotel.stars\"\n          v-bind:key=\"n\"\n          src=\"/images/star.png\"\n          alt=\"Stars\"\n          v-bind:title=\"hotel.stars + ' stars'\"\n        />\n      </article>\n    </section>\n\n    <section id=\"hotel-reservations\">\n      <a v-if=\"!reservations\" href=\"#\" v-on:click.prevent=\"getReservations\"\n        >Show hotel reservations</a\n      >\n      <div id=\"reservations\" v-else>\n        <h2>Reservations</h2>\n        <p>\n          <em\n            >{{ reservations.length }} reservation{{\n              reservations.length == 1 ? \"\" : \"s\"\n            }}\n            found</em\n          >\n        </p>\n        <router-link\n          v-bind:to=\"{ name: 'add-reservation', params: { hotelId: hotel.id } }\"\n          >Book new reservation</router-link\n        >\n        <article\n          id=\"reservation-list\"\n          v-for=\"res in reservations\"\n          v-bind:key=\"res.id\"\n        >\n          <hr />\n          <reservation-details\n            id=\"reservation-details\"\n            v-bind:reservation=\"res\"\n          />\n          <router-link\n            v-bind:to=\"{\n              name: 'update-reservation',\n              params: { id: res.id },\n            }\"\n            ><font-awesome-icon\n              icon=\"fa-solid fa-pen-to-square\"\n              class=\"fa-icon\"\n          /></router-link>\n          <router-link\n            v-bind:to=\"{\n              name: 'delete-reservation',\n              params: { id: res.id },\n            }\"\n          >\n            <font-awesome-icon icon=\"fa-solid fa-trash-can\" class=\"fa-icon\"\n          /></router-link>\n        </article>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport utility from \"../services/utility\";\nimport LoadingSpinner from \"../components/LoadingSpinner.vue\";\nimport ReservationDetails from \"../components/ReservationDetails.vue\";\n//step 2.2\nimport hotelService from \"../services/HotelService\";\nexport default {\n  components: { LoadingSpinner, ReservationDetails },\n  name: \"HotelDetailsView\",\n  data() {\n    return {\n      hotel: {\n        address: {},\n      }, // The single hotel object displayed in this view\n      isLoading: false, // true to indicate a call in progress\n      reservations: null, // The list of reservations for this hotel.\n      showRes: false, // The user requested to view reservations\n    };\n  },\n  methods: {\n    /***\n     * Get a single hotel from the API.\n     */\n    getHotel(id) {\n      console.log(id);  // prevents a \"no-unused-vars\" error\n      // Set the indicator that a call is in progress.\n      this.isLoading = true;\n\n      // TODO 2.3: Use the Service object to `GET /hotels/{id}`. Set the body of the result to `this.hotel`. Handle errors.\n      hotelService\n        .getHotelById(id)\n        .then((response) => {\n          this.hotel = response.data;\n      // When done (whether success or error) set the indicator that the call is complete.\n      this.isLoading = false;\n      // if (this.showRes) {\n      //       this.getReservations();\n      //     }\n        })\n        .catch(error => {\n        if (error.response.status == 404) {\n          this.isLoading = false;\n          alert(error);\n        }\n      });\n    },\n    getReservations() {\n      // The \"?\" in \"this.hotel?.id\" returns a `null` if `hotel` is null or undefined,\n      // instead of throwing an error. This is called the optional chaining operator.\n      if (!this.hotel?.id) {\n        return;\n      }\n\n      // Set the indicator that a call is in progress.\n      this.isLoading = true;\n\n      // TODO 2.4: Use the Service object to `GET /hotels/{id}/reservations`. Set the body of the result to `this.reservations`. Handle errors.\n      hotelService\n        .getReservationsByHotel(this.hotel.id)\n        .then((response) => {\n          this.reservations = response.data;\n      // When done (whether success or error) set the indicator that the call is complete.\n      this.isLoading = false;\n        })\n        .catch(error => {\n        if (error.response.status == 404) {\n          this.isLoading = false;\n          alert(error);\n        }\n      });\n    },\n    formatCurrency(value) {\n      return utility.formatCurrency(value);\n    },\n  },\n  created() {\n    // If this page was called with \"?showRes=true\" as a query string, automatically get the reservations when the page is loaded.\n    if (this.$route.query.showRes) {\n      this.showRes = true;\n    }\n    // Fetch the hotel based on the path parameter\n    this.getHotel(this.$route.params.id);\n  },\n};\n</script>\n\n<style scoped>\n#reservation-details {\n  display: inline-block;\n}\n\n#heading-line {\n  display: flex;\n  align-items: center;\n}\n\n#hotel-details {\n  display: grid;\n  grid-template-columns: 200px auto;\n  padding: 10px 30px;\n  row-gap: 20px;\n}\n\n#hotel-reservations {\n  padding: 10px 30px;\n}\n\n#hotel-details > * {\n  border-top: 1px solid rgb(175, 175, 175);\n  padding-top: 15px;\n}\n\n#hotel-image {\n  max-height: 100px;\n}\n\nsection > header {\n  font-size: 1.1rem;\n  font-weight: bolder;\n}\n\nimg.rating-star {\n  height: 50px;\n}\n\n.fa-icon {\n  font-size: 1.4rem;\n  margin-right: 8px;\n}\n</style>"]}]}